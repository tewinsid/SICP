(define (left-branch thing)
	(car thing)
(define (right-branch thing)
	(cadr thing))
(define (branch-length branch)
	(car branch))
(define (branch-structure)
	(cadr branch))
(define (total-weight thing)
	(cond
		((null? thing) 0)
		((not (pair? thing)) (branch-structure thing))
		(else
			(+ (total-weight (left-branch thing))
			(total-weight (right-branch thing)))
		)
	)
)
(define (total-weight2 thing)
	(+ (branch-weight2 (left-branch thing))
		(branch-weight2 (right-branch thing)))
)

(define (branch-weight2 branch)
	(if (not (pair? branch))
		(branch-structure branch)
		(total-weight2 (branch-structure branch))
))
(define (is-balance thing)
	(and
		(= (branch-torque (left-branch thing)) (branch-torque (right-branch thing)))
		(is-balance (left-branch thing))
		(is-balance (right-branch thing)) #t
		))
(define (branch-torque branch)
	(* (branch-length branch) (branch-weight2 branch)))
